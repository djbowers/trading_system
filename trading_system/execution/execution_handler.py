from abc import ABCMeta, abstractmethod

from trading_system.event import OrderEvent


class ExecutionHandler:
    """
    Handles the interaction between OrderEvent objects generated by a Portfolio and
    the ultimate set of FillEvent objects that actually occur in the market.

    Can be used to subclass simulated brokerages or live brokerages, with
    identical interfaces. This allows strategies to be backtested in a very
    similar manner to the live trading engine.
    """

    __metaclass__ = ABCMeta

    @abstractmethod
    def execute_order(self, event: OrderEvent):
        """
        Takes an OrderEvent object and executes it, producing
        a FillEvent object that gets placed onto the EventQueue.
        """
        raise NotImplementedError
